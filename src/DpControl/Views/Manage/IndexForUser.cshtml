@using Microsoft.AspNet.Identity.EntityFramework
@inject RoleManager<IdentityRole> roleManager

<style>
    .SearchArea {
    }

        .SearchArea label {
            float: left;
            margin-left: 5px;
            margin-top: 5px;
            width: 80px;
            text-align: right;
        }

        .SearchArea input{
            float: left;
            margin-left: 10px;
        }
        .rolecheck {
            float:left;
        }

</style>

<div class="SearchArea">
    <div class="SearchRow">
        <div style="float:left;">
            <label>Name:</label>
            <input type="text" name="tbSearchName" class="input-sm" placeholder="Name" />
        </div>
        <div style="float:right">
            <a class="btn btn-primary" href="#" id="btnSearch">Search</a>
        </div>
        <div style="clear:both;"></div>

    </div>
</div>
<div id="toolbar">
    <a class="btn btn-primary" href='#UserAddModel' data-toggle='modal'>
        <span class="iconfa-book">Add</span>
    </a>
    <a class="btn btn-info" href='#' id="btnEdit">
        <span class="iconfa-pencil">Edit</span>
    </a>
    <a class="btn btn-primary" href='#' id="btnDelete">
        <span class="iconfa-delete">Delete</span>
    </a>

</div>

<table id="tableUser" class="table table-bordered">

</table>

<!--Add-->
<div aria-hidden="false" aria-labelledby="myModalLabel" data-backdrop="static" user="dialog" tabindex="-1" class="modal hide fade in" id="UserAddModel" style="width:800px;">
    <div class="modal-header">
        <button aria-hidden="true" data-dismiss="modal" class="close" type="button">&times;</button>
        <h3 id="myModalLabel">Add Users</h3>
    </div>
    <div class="modal-body" style="height:400px;">
        <form action="forms.html" method="post">
            <div>
                <div class="span4">
                    <label class="modallabel">Name</label>
                    <span class="field">
                        <input type="text" id="tbAddName" class="input-large">
                    </span>
                    <br />
                    <label class="modallabel">Password</label>
                    <span class="field">
                        <input type="text" id="tbAddPassword" class="input-large">
                    </span>
                    <br />
                    <label class="modallabel">Roles</label>
                    <span class="field">
                        <input type="text" id="tbAddRoles" class="input-large" placeholder="Select Roles below">
                    </span>
                    <br />
                    <div style="padding:10px 130px;">
                        @{
                            var allRoles = roleManager.Roles.ToList();
                            foreach (var role in allRoles)
                            {
                                <input name="ckRole" id="tb'@role'" class="rolecheck" value=@role.Name type="checkbox" style="margin:0 5px;" />
                                <label for="tb'@role'" style="width:100px;">@role.Name</label>

                            }
                        }
                    </div>
                 </div>
            </div>
        </form>
    </div>
    <div class="modal-footer">
        <button data-dismiss="modal" class="btn">取消</button>
        <button class="btn btn-primary" id="btnAdd">保存</button>
    </div>
</div>
<!--#myModal-->

<script>

    jQuery(document).ready(function () {
        InitTable();
        InitToolBarButtons();
        InitAddButtons();

       // model hide event
        jQuery('#UserAddModel').on('hide.bs.modal', function () {
            debugger
            // clear input content
            jQuery("#tbAddName").val("");
        });
    });

    jQuery(".rolecheck:checkbox").click(function () {

        var chooseRoles = "";
        jQuery("[name = ckRole]:checkbox").each(function () {
            if (jQuery(this).is(":checked")) {
                chooseRoles += jQuery(this).attr("value") + ";";

            }

        });
        jQuery("#tbAddRoles").val(chooseRoles);
    });

    jQuery("#checkTableAll").click(function () {
        if (this.checked) {
            jQuery("[name = checkTableRows]:checkbox").prop("checked", true);

        } else {
            jQuery("[name = checkTableRows]:checkbox").prop("checked", false);
        }
    });

    function InitTable() {
        jQuery('#tableUser').dataTable({
            "bPaginate": true, //翻页功能
            "bSort": false, //排序功能
            /*默认排序设置*/
            // "aaSorting": [[0, "desc"]],//设置第1个元素为默认排序
            "bProcessing": true,
            "bServerSide": true,
            "sAjaxSource": "/Manage/GetUserPageData",
            "fnServerData": retrieveData,    //发送额外的数据到服务器
            "bAutoWidth": true,                    //自动计算列宽度
            //"iDisplayLength": 20,                    //每页显示8条数据
            "aLengthMenu": [[10,25, 50, 100, -1], ["10","25", "50", "100", "All"]],
            "sPaginationType": "full_numbers", //分页风格
            //"sDom": '<"top"lpf>rt<"bottom"filp><"clear">', //
            //"sScrollX": "200px",
            "sScrollY": document.body.clientHeight - jQuery(".SearchArea").height() - jQuery("#toolbar").height() ,
            //"bScrollCollapse": true,
            "bFilter":false,
            "aoColumns": [
                {
                    "sTitle":"<input type='checkbox' id='checkTableAll'>",
                    "mDataProp": "Id",
                    "fnRender": function (obj) {
                        var idValue = obj.aData.Id;
                        return "<input type='checkbox' name='checkTableRows' value='" + idValue + "'>"
                    },
                    "sWidth": '1%'

                },
                {
                    "sTitle": "Rows",
                    "mData": "ConcurrencyStamp",
                    "fnRender": function (obj) {
                        var rowIndex = obj.iDataRow + 1;
                        return rowIndex;
                    },
                    "sWidth": '1%'

                },
                {
                    "sTitle": "UserName",
                    "mDataProp": "UserName",
                    "sWidth": '20%'
                },
                {
                    "sTitle": "Roles",
                    "mDataProp": "NormalizedUserName",
                    "fnRender": function (obj) {
                        var roles = ConstructRolesByUserName(obj.aData.UserName);
                        return roles;
                    }
                }
            ],
            "oLanguage": {
                "sLengthMenu": "Show _MENU_ entries",
                "sZeroRecords": "没有检索到数据",
                "sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
                "sInfoEmtpy": "No entities",
                "sProcessing": "Data Loading...",
                "sSearch": "Search：",
                "oPaginate": {
                    "sFirst": "First",
                    "sPrevious": "Previous",
                    "sNext": "Next",
                    "sLast": "Last"
                }
            }

        });
    }

    function retrieveData(sSource, aoData, fnCallback) {
       
        jQuery.ajax({
            "type": "post",
            //"contentType": "application/json",
            "url": sSource,
            "dataType": "json",
            "data": aoData,
            "success": function (resp) {

                fnCallback(resp);

            }
        });
    }

    function Search() {
        var table = jQuery('#tableUser').DataTable();
        table.fnDraw();
    }

    function ConstructRolesByUserName(userName) {

        var roleNames = '';
        jQuery.ajax({
            type: "get",//使用get方法访问后台
            dataType: "json",//返回json格式的数据
            url: "/Manage/GetRolesByUserName",
            data: { "UserName": userName },
            async: false,
            success: function (data) {

                for (var i = 0; i < data.length; i++) {
                    if (i == 0) {
                        roleNames += data[i];

                    } else {
                        roleNames += "、" + data[i];

                    }
                }

            }
        });
        return roleNames;

    }

    //region Add model
    function InitAddButtons() {
        jQuery("#btnAdd").click(function () {
            var userName = jQuery("#tbAddName").val();
            var password = jQuery("#tbAddPassword").val();
            var roles = jQuery("#tbAddRoles").val();

            if (userName.trim() == "")
            {
                layer.alert("Please Input User Name", {
                    skin: 'layui-layer-molv'
                          , closeBtn: 0
                          , shift: 5 //动画类型
                });
                return;
            }
            
            var obj =
            {
                UserName : userName,
                Password: password,
                Roles:roles
            }

            jQuery.ajax({
                type: "post",//使用post方法访问后台
                dataType: "json",//返回json格式的数据
                url: "/Manage/CreateUser",
                data: obj,
                async: false,
                success: function (message) {
                    if (message.Success) {
                        //clost model
                        CloseAddModel();
                        //重新加载
                        Search();
                    } else {

                        layer.alert(message.Content, {
                            skin: 'layui-layer-lan'
                            , closeBtn: 0
                            , shift: 4 //动画类型
                        });

                    }

                }
            });
        });
    }

    //clost model
    function CloseAddModel() {

        jQuery('#UserAddModel').modal('hide');
    }


    //endregion


    function InitToolBarButtons() {
        jQuery("#btnSearch").click(function () {
            Search();
        });



        jQuery("#btnEdit").click(function () {
            layer.alert("Edit is not enabled", {
                skin: 'layui-layer-molv'
                           , closeBtn: 0
                           , shift: 5 //动画类型
            });
        });

        jQuery("#btnDelete").click(function () {

            var checkedItems = jQuery('input:checkbox[name="checkTableRows"]:checked');
            if (checkedItems.length == 0) {
                layer.alert("Please select records", {
                    skin: 'layui-layer-molv'
                            , closeBtn: 0
                            , shift: 5 //动画类型
                });
                return;
            }

            var userIds = [];
            checkedItems.each(function () //multiple checkbox的name
            {
                var id = jQuery(this).val();
                userIds.push(id);
            });

            //delete records
            var jsonUserIds = JSON.stringify(userIds);
            jQuery.ajax({
                type: "get",//使用get方法访问后台
                dataType: "json",//返回json格式的数据
                url: "/Manage/BachDeleteByUserId",
                data: { "UserIds": jsonUserIds },
                async: false,
                success: function (message) {
                    if (message.Success) {
                        //重新加载
                        Search();
                    } else {

                        layer.alert(message.Content, {
                            skin: 'layui-layer-lan'
                            , closeBtn: 0
                            , shift: 4 //动画类型
                        });

                    }

                }
            });
        });
    }
</script>