@using System.Collections.Generic
@using DpControl.Domain.Models
@inject UserManager<ApplicationUser> userManager

<div style="margin:10px auto;">
    <a asp-controller="Manage" asp-action="CreateUser" style="margin-right:10px;">Create</a>|
    <a href="javaScript:void()" id="aDelete">Delete</a>

</div>
<table class="table">
   
    <thead>
        <tr style="background-color:cadetblue">
            <td>
                <input id="ckAll" type="checkbox" />
            </td>
            <th>UserName</th>
            <th>Roles</th>

        </tr>
    </thead>
    <tbody data-bind="foreach: UserResult">
        <tr>
            <td>
                <input name="ckUser" data-bind="value:userId" type="checkbox" />
            </td>
            <td data-bind="text:userName"></td>
            <td data-bind="text: roleNames"></td>

        </tr>
    </tbody>
</table>
<!--Script要放在HTML标签后，才能将值绑定到标签-->
<script type="text/javascript">

    var userResults = @Json.Serialize(ViewData["UserResults"]);
    
    function UserResult(userId,userName) {
        var self = this;
        self.userId = userId;
        self.userName = userName;
        
        var names ='';
        //根据用户名，获取对应的角色信息
        $.ajax({
            type: "get",//使用get方法访问后台
            dataType: "json",//返回json格式的数据
            url: "/Manage/GetRolesByUserName",
            data: {"UserName":userName},
            async:false,
            success: function(data){
                
                for(var i=0;i<data.length;i++)
                {
                    if(i==0)
                    {
                        names += data[i];

                    }else{
                        names += "、"+ data[i];

                    }
                } 

            }
        });
        
        self.roleNames = names;
    }


    function AppViewModel() {
        var self = this;
        var userResult = [];
        for (var i = 0; i < userResults.length ; i++)
        {
            var id = userResults[i].Id;
            var name = userResults[i].UserName;

            userResult.push(new UserResult(id,name));
        }

        self.UserResult = ko.observableArray(userResult);
        
        
    }
    
    // Activates knockout.js
    ko.applyBindings(new AppViewModel());


    $("#ckAll").click(function(){
        if(this.checked){
            $("[name = ckUser]:checkbox").prop("checked", true);

        }else{
            $("[name = ckUser]:checkbox").prop("checked", false);
        }
    });

    //Delete
    $("#aDelete").click(function(){
        var checkedItems = $('input:checkbox[name="ckUser"]:checked');
        if(checkedItems.length == 0)
        {
            alert("Please select records");
            return ;
        }

        var userIds =[];
        checkedItems.each(function() //multiple checkbox的name  
        {  
            var id = $(this).val();  
            userIds.push(id);
        });  
        //delete records
        var jsonUserId = JSON.stringify(userIds);
        $.ajax({
            type: "get",//使用get方法访问后台
            dataType: "json",//返回json格式的数据
            url: "/Manage/BachDeleteByUserId",
            data: {"UserIds":jsonUserId},
            async:false,
            success: function(message){
                if(message.Success)
                {
                    location.href ="/Manage/IndexForUser";
                }else{
                    alert(message.Content);
                }
               
            }
        });


    });
</script>    