<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DpControl</name>
    </assembly>
    <members>
        <member name="M:DpControl.Controllers.ManageController.GetUserPageData(DpControl.Models.JQueryDataTableParams)">
            <summary>
            Get User Paging Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.ManageController.GetRolePageData(DpControl.Models.JQueryDataTableParams)">
            <summary>
            Get Role Paging Data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmMessagesController.GetByAlarmMessageIdAsync(System.Int32)">
            <summary>
            Search data by AlarmMessageId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmMessagesController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmMessagesController.AddAsync(DpControl.Domain.Models.AlarmMessageAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmMessagesController.DeleteByAlarmMessageIdAsync(System.Int32)">
            <summary>
            Delete data by AlarmMessageId
            </summary>
            <param name="alarmMessageId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmMessagesController.UpdateAsync(System.Int32,DpControl.Domain.Models.AlarmMessageUpdateModel)">
            <summary>
            Edit data by AlarmMessageId
            </summary>
            <param name="AlarmMessageId"></param>
            <param name="AlarmMessage"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmsController.GetByAlarmIdAsync(System.Int32)">
            <summary>
            Search data by AlarmId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmsController.GetLocationByAlarmIdAsync(System.Int32)">
            <summary>
            Get Location Relation
            </summary>
            <param name="alarmId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmsController.GetAlarmMessageByAlarmIdAsync(System.Int32)">
            <summary>
            Get AlarmMessage Relation
            </summary>
            <param name="alarmId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmsController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmsController.AddAsync(DpControl.Domain.Models.AlarmAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.AlarmsController.DeleteByAlarmIdAsync(System.Int32)">
            <summary>
            Delete data by AlarmId
            </summary>
            <param name="alarmId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.DevicesController.GetByDeviceIdAsync(System.Int32)">
            <summary>
            Search data by DeviceId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.DevicesController.GetLocationsBySceneIdAsync(System.Int32)">
            <summary>
            Get Locations Relation
            </summary>
            <param name="deviceId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.DevicesController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.DevicesController.AddAsync(DpControl.Domain.Models.DeviceAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.DevicesController.UpdateAsync(System.Int32,DpControl.Domain.Models.DeviceUpdateModel)">
            <summary>
            Edit data by deviceId
            </summary>
            <param name="deviceId"></param>
            <param name="Location"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.DevicesController.DeleteByDeviceIdAsync(System.Int32)">
            <summary>
            Delete data by DeviceId
            </summary>
            <param name="DeviceId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.GetByGroupIdAsync(System.Int32)">
            <summary>
            Search data by GroupId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.GetProjectByGroupIdAsync(System.Int32)">
            <summary>
            Get Project Relation
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.GetSceneByGroupIdAsync(System.Int32)">
            <summary>
            Get Scene Relation
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.GetLocationsByGroupIdAsync(System.Int32)">
            <summary>
            Get Locations Relation
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.AddAsync(DpControl.Domain.Models.GroupAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.UpdateAsync(System.Int32,DpControl.Domain.Models.GroupUpdateModel)">
            <summary>
            Edit data by GroupId
            </summary>
            <param name="GroupId"></param>
            <param name="Group"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.DeleteByGroupIdIdAsync(System.Int32)">
            <summary>
            Delete data by GroupId
            </summary>
            <param name="groupId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.CreateRelationsAsync(System.Int32,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Create RelationShips:Users、Locations
            </summary>
            <param name="groupId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.GroupsController.RemoveRelationsAsync(System.Int32,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Remove RelationShips:Users、Locations
            </summary>
            <param name="groupId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.HolidaysController.GetByHolidayIdAsync(System.Int32)">
            <summary>
            Search data by holidayId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.HolidaysController.GetProjectByHolidayIdAsync(System.Int32)">
            <summary>
            Get Project Relation
            </summary>
            <param name="holidayId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.HolidaysController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.HolidaysController.AddAsync(DpControl.Domain.Models.HolidayAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.HolidaysController.UpdateAsync(System.Int32,DpControl.Domain.Models.HolidayUpdateModel)">
            <summary>
            Edit data by holidayId
            </summary>
            <param name="customerNo"></param>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.HolidaysController.DeleteByHolidayIdAsync(System.Int32)">
            <summary>
            Delete data by HolidayId
            </summary>
            <param name="customerId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.GetBySceneIdAsync(System.Int32)">
            <summary>
            Search data by LocationId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.GetProjectBySceneIdAsync(System.Int32)">
            <summary>
            Get Project Relation
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.GetDeviceBySceneIdAsync(System.Int32)">
            <summary>
            Get Device Relation
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.GetGroupsBySceneIdAsync(System.Int32)">
            <summary>
            Get Groups Relation
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.GetLogsBySceneIdAsync(System.Int32)">
            <summary>
            Get Logs Relation
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.GetAlarmsBySceneIdAsync(System.Int32)">
            <summary>
            Get Alarms Relation
            </summary>
            <param name="locationId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.AddAsync(DpControl.Domain.Models.LocationAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.UpdateAsync(System.Int32,DpControl.Domain.Models.LocationUpdateModel)">
            <summary>
            Edit data by locationId
            </summary>
            <param name="locationId"></param>
            <param name="Location"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.DeleteByLocationIdAsync(System.Int32)">
            <summary>
            Delete data by LocationId
            </summary>
            <param name="LocationId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.CreateRelationsAsync(System.Int32,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Create RelationShips:Users、Groups
            </summary>
            <param name="locationId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LocationsController.RemoveRelationsAsync(System.Int32,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Remove RelationShips:Users、Groups
            </summary>
            <param name="locationId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogDescriptionsController.GetByLogDescriptionIdAsync(System.Int32)">
            <summary>
            Search data by LogDescriptionId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogDescriptionsController.GetLogsByLogDescriptionIdAsync(System.Int32)">
            <summary>
            Get Logs Relation
            </summary>
            <param name="logDescriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogDescriptionsController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogDescriptionsController.AddAsync(DpControl.Domain.Models.LogDescriptionAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogDescriptionsController.DeleteByLogDescriptionIdAsync(System.Int32)">
            <summary>
            Delete data by LogDescriptionId
            </summary>
            <param name="logDescriptionId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogDescriptionsController.UpdateAsync(System.Int32,DpControl.Domain.Models.LogDescriptionUpdateModel)">
            <summary>
            Edit data by LogDescriptionId
            </summary>
            <param name="LogDescriptionId"></param>
            <param name="LogDescription"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogsController.GetByLogIdAsync(System.Int32)">
            <summary>
            Search data by LogId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogsController.GetLocationByLogIdAsync(System.Int32)">
            <summary>
            Get Location Relation
            </summary>
            <param name="logId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogsController.GetLogDescriptionByLogIdAsync(System.Int32)">
            <summary>
            Get LogDescription Relation
            </summary>
            <param name="logId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogsController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogsController.AddAsync(DpControl.Domain.Models.LogAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.LogsController.DeleteByLogIdAsync(System.Int32)">
            <summary>
            Delete data by LogId
            </summary>
            <param name="logId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.GetByProjectIdAsync(System.Int32)">
            <summary>
            Search data by ProjectId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.GetCustomerByProjectIdAsync(System.Int32)">
            <summary>
            Get Customer Relation
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.GetGroupsByProjectIdAsync(System.Int32)">
            <summary>
            Get Groups Relation
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.GetLocationsByProjectIdAsync(System.Int32)">
            <summary>
            Get Locations Relation
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.GetScenesByProjectIdAsync(System.Int32)">
            <summary>
            Get Scenes Relation
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.GetHolidaysByProjectIdAsync(System.Int32)">
            <summary>
            Get Locations Relation
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.AddAsync(DpControl.Domain.Models.ProjectAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.UpdateAsync(System.Int32,DpControl.Domain.Models.ProjectUpdateModel)">
            <summary>
            Edit data by ProjectId
            </summary>
            <param name="customerNo"></param>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ProjectsController.DeleteByProjectIdIdAsync(System.Int32)">
            <summary>
            Delete data by CustomerNo
            </summary>
            <param name="customerId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.RolesController.GetByRoleIdAsync(System.String)">
            <summary>
            Get Role by id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.RolesController.GetUsersByRoleIdAsync(System.String)">
            <summary>
            Get User Relation by role id
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.RolesController.GetAllAsync">
            <summary>
            Get all Roles
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.RolesController.CreateRelationsAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Create RelationShips.Available Relations :Users
            </summary>
            <param name="roleId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.RolesController.RemoveRelationsAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Delete RelationShips.Available Relations :Users
            </summary>
            <param name="roleId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ScenesController.GetBySceneIdAsync(System.Int32)">
            <summary>
            Search data by SceneId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ScenesController.GetProjectBySceneIdAsync(System.Int32)">
            <summary>
            Get Project Relation
            </summary>
            <param name="sceneId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ScenesController.GetSceneSegmentsBySceneIdAsync(System.Int32)">
            <summary>
            Get SceneSegments Relation
            </summary>
            <param name="sceneId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ScenesController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ScenesController.AddAsync(DpControl.Domain.Models.SceneAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ScenesController.UpdateAsync(System.Int32,DpControl.Domain.Models.SceneUpdateModel)">
            <summary>
            Edit data by SceneId
            </summary>
            <param name="SceneId"></param>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.ScenesController.DeleteBySceneIdAsync(System.Int32)">
            <summary>
            Delete data by SceneId
            </summary>
            <param name="SceneId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.SceneSegmentsController.GetBySceneSegmentIdAsync(System.Int32)">
            <summary>
            Search data by sceneSegmentId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.SceneSegmentsController.GetSceneBySceneSegmentIdAsync(System.Int32)">
            <summary>
            Get Scene Relation
            </summary>
            <param name="sceneSegmentId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.SceneSegmentsController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.SceneSegmentsController.AddAsync(DpControl.Domain.Models.SceneSegmentAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.SceneSegmentsController.UpdateAsync(System.Int32,DpControl.Domain.Models.SceneSegmentUpdateModel)">
            <summary>
            Edit data by sceneSegmentId
            </summary>
            <param name="customerNo"></param>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.SceneSegmentsController.DeleteBySceneSegmentIdAsync(System.Int32)">
            <summary>
            Delete data by SceneSegmentId
            </summary>
            <param name="customerId"></param>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.GetByUserIdAsync(System.String)">
            <summary>
            Get User by id
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.GetLocationsByUserIdAsync(System.String)">
            <summary>
            Get Locations Relation by user id
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.GetGroupsByUserIdAsync(System.String)">
            <summary>
            Get Groups Relation by User id
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.GetRolesByUserIdAsync(System.String)">
            <summary>
            Get Roles Relation by User id
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.GetAllAsync">
            <summary>
            Get All Users:
            if Admin and CustomerLevel,then filter by CustomerNo;
            if Admin and ProjectNo,then filter by ProjectNo;
            if not Admin,filter by current login username;
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.AddAsync(DpControl.Domain.Models.UserAddModel)">
            <summary>
            Add new User
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.CreateRelationsAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Create RelationShips:Roles、Locations、Groups
            </summary>
            <param name="userId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.RemoveRelationsAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Remove RelationShips:Roles、Locations、Groups
            </summary>
            <param name="userId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.UpdateAsync(System.String,DpControl.Domain.Models.UserUpdateModel)">
            <summary>
            Update User by Id
            </summary>
            <param name="id"></param>
            <param name="mUser"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Controllers.APIControllers.UsersController.DeleteByUserIdAsync(System.String)">
            <summary>
            Delete data by UserId
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:DpControl.APIControllers.CustomersController.GetByCustomerIdAsync(System.Int32)">
            <summary>
            Search data by CustomerId
            </summary>
            <param name="id">ID</param>
            <returns></returns>
        </member>
        <member name="M:DpControl.APIControllers.CustomersController.GetProjectsByCustomerIdAsync(System.Int32)">
            <summary>
            Get Related Projects
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.APIControllers.CustomersController.GetAllAsync">
            <summary>
            Search all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.APIControllers.CustomersController.AddAsync(DpControl.Domain.Models.CustomerAddModel)">
            <summary>
            Add data
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.APIControllers.CustomersController.UpdateAsync(System.Int32,DpControl.Domain.Models.CustomerUpdateModel)">
            <summary>
            Edit data by CustomerId
            </summary>
            <param name="customerNo"></param>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.APIControllers.CustomersController.DeleteByCustomerIdAsync(System.Int32)">
            <summary>
            Delete data by CustomerNo
            </summary>
        </member>
        <member name="P:DpControl.Domain.Entities.ApplicationUser.UserLevel">
            <summary>
            there are three levels:
            SuperLevel:this level CustomerNo and ProjectNo must be empty
            CustomerLevel:this level CustomerNo is required and ProjectNo must be empty
            ProjectLevel:this level ProjectNo is required
            </summary>
        </member>
        <member name="T:DpControl.Domain.Entities.Orientation">
            <summary>
            方向
            </summary>
        </member>
        <member name="T:DpControl.Domain.Entities.DeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="T:DpControl.Domain.Entities.CommMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:DpControl.Domain.Entities.UserLevel">
            <summary>
            用户级别
            </summary>
        </member>
        <member name="T:DpControl.Domain.Execptions.ExpectException">
            <summary>
            Expect Exception which use to catch error tip
            </summary>
        </member>
        <member name="T:DpControl.Domain.IRepository.ILoginUserRepository">
            <summary>
            use to get login user info
            </summary>
        </member>
        <member name="T:DpControl.Domain.IRepository.IUserRepository">
            <summary>
            use to operator database data
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.AlarmOperator.SetAlarmSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Alarm})">
            <summary>
            Cascade set AlarmSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.AlarmOperator.SetAlarmSearchModelCascade(DpControl.Domain.Entities.Alarm)">
            <summary>
            Cascade set AlarmSearchModel Result
            </summary>
            <param name="alarm"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.AlarmOperator.SetAlarmSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Alarm})">
            <summary>
            Cascade set AlarmSubSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.AlarmOperator.SetAlarmSubSearchModel(DpControl.Domain.Entities.Alarm)">
            <summary>
            Cascade set AlarmSubSearchModel Result
            </summary>
            <param name="alarm"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.AlarmMessageOperator.SetAlarmMessageSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.AlarmMessage})">
            <summary>
            Cascade set AlarmMessageSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.AlarmMessageOperator.SetAlarmMessageSearchModelCascade(DpControl.Domain.Entities.AlarmMessage)">
            <summary>
            Cascade set AlarmMessageSearchModel Result
            </summary>
            <param name="alarmMessage"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.AlarmMessageOperator.SetAlarmMessageSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.AlarmMessage})">
            <summary>
            Cascade set AlarmMessageSubSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.AlarmMessageOperator.SetAlarmMessageSubSearchModel(DpControl.Domain.Entities.AlarmMessage)">
            <summary>
            Cascade set AlarmMessageSubSearchModel Result
            </summary>
            <param name="alarmMessage"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.CustomerOperator.SetCustomerSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Customer})">
            <summary>
            Cascade set CustomerSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.CustomerOperator.SetCustomerSearchModelCascade(DpControl.Domain.Entities.Customer)">
            <summary>
            Cascade set CustomerSearchModel Result
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.CustomerOperator.SetCustomerSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Customer})">
            <summary>
            Cascade set CustomerSubSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.CustomerOperator.SetCustomerSubSearchModel(DpControl.Domain.Entities.Customer)">
            <summary>
            Cascade set CustomerSubSearchModel Result
            </summary>
            <param name="customer"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.DeviceOperator.SetDeviceSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Device})">
            <summary>
            Cascade set DeviceSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.DeviceOperator.SetDeviceSearchModelCascade(DpControl.Domain.Entities.Device)">
            <summary>
            Cascade set DeviceSearchModel Result
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.DeviceOperator.SetDeviceSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Device})">
            <summary>
            Cascade set DeviceSubSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.DeviceOperator.SetDeviceSubSearchModel(DpControl.Domain.Entities.Device)">
            <summary>
            Cascade set DeviceSubSearchModel Result
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.GroupOperator.SetGroupSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Group})">
            <summary>
            Cascade set GroupSearchModel Results
            </summary>
            <param name="groups"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.GroupOperator.SetGroupSearchModelCascade(DpControl.Domain.Entities.Group)">
            <summary>
            Cascade set GroupSearchModel Result
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.GroupOperator.SetGroupSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Group})">
            <summary>
            Cascade set GroupSubSearchModel Results
            </summary>
            <param name="groups"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.GroupOperator.SetGroupSubSearchModel(DpControl.Domain.Entities.Group)">
            <summary>
            Cascade set GroupSubSearchModel Result
            </summary>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.HolidayOperator.SetHolidaySearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Holiday})">
            <summary>
            Cascade set HolidaySearchModel Results
            </summary>
            <param name="holidays"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.HolidayOperator.SetHolidaySearchModelCascade(DpControl.Domain.Entities.Holiday)">
            <summary>
            Cascade set HolidaySearchModel Result
            </summary>
            <param name="holiday"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.HolidayOperator.SetHolidaySubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Holiday})">
            <summary>
            Cascade set HolidaySubSearchModel Results
            </summary>
            <param name="holidays"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.HolidayOperator.SetHolidaySubSearchModel(DpControl.Domain.Entities.Holiday)">
            <summary>
            Cascade set HolidaySubSearchModel Result
            </summary>
            <param name="holiday"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.LocationOperator.SetLocationSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Location})">
            <summary>
            Cascade set LocationSearchModel Results
            </summary>
            <param name="locations"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.LocationOperator.SetLocationSearchModelCascade(DpControl.Domain.Entities.Location)">
            <summary>
            Cascade set LocationSearchModel Result
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.LocationOperator.SetLocationSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Location})">
            <summary>
            Cascade set LocationSubSearchModel Results
            </summary>
            <param name="locations"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.LocationOperator.SetLocationSubSearchModel(DpControl.Domain.Entities.Location)">
            <summary>
            Cascade set LocationSubSearchModel Result
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.LogOperator.SetLogSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Log})">
            <summary>
            Cascade set LogSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.LogOperator.SetLogSearchModelCascade(DpControl.Domain.Entities.Log)">
            <summary>
            Cascade set LogSearchModel Result
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.LogOperator.SetLogSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Log})">
            <summary>
            Cascade set LogSubSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.LogOperator.SetLogSubSearchModel(DpControl.Domain.Entities.Log)">
            <summary>
            Cascade set LogSearchModel Result
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.LogDescriptionOperator.SetLogDescriptionSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.LogDescription})">
            <summary>
            Cascade set LogDescriptionSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.LogDescriptionOperator.SetLogDescriptionSearchModelCascade(DpControl.Domain.Entities.LogDescription)">
            <summary>
            Cascade set LogDescriptionSearchModel Result
            </summary>
            <param name="logDescription"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.LogDescriptionOperator.SetLogDescriptionSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.LogDescription})">
            <summary>
            Cascade set LogDescriptionSubSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.LogDescriptionOperator.SetLogDescriptionSubSearchModel(DpControl.Domain.Entities.LogDescription)">
            <summary>
            Cascade set LogDescriptionSearchModel Result
            </summary>
            <param name="logDescription"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.ProjectOperator.SetProjectSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Project})">
            <summary>
            Cascade set ProjectSearchModel Results
            </summary>
            <param name="projects"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.ProjectOperator.SetProjectSearchModelCascade(DpControl.Domain.Entities.Project)">
            <summary>
            Cascade set ProjectSearchModel Result
            </summary>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.ProjectOperator.SetProjectSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Project})">
            <summary>
            Cascade set ProjectSubSearchModel Results
            </summary>
            <param name="projects"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.ProjectOperator.SetProjectSubSearchModel(DpControl.Domain.Entities.Project)">
            <summary>
            Cascade set ProjectSubSearchModel Result
            </summary>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.RoleOperator.SetRoleSearchModelCascade(System.Collections.Generic.List{Microsoft.AspNet.Identity.EntityFramework.IdentityRole})">
            <summary>
            Cascade set RoleSearchModel Results
            </summary>
            <param name="roles"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.RoleOperator.SetRoleSearchModelCascade(Microsoft.AspNet.Identity.EntityFramework.IdentityRole)">
            <summary>
            Cascade set RoleSearchModel Result
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.RoleOperator.SetRoleSubSearchModel(System.Collections.Generic.List{Microsoft.AspNet.Identity.EntityFramework.IdentityRole})">
            <summary>
            Cascade set RoleSubSearchModel Results
            </summary>
            <param name="roles"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.RoleOperator.SetRoleSubSearchModel(Microsoft.AspNet.Identity.EntityFramework.IdentityRole)">
            <summary>
            Cascade set RoleSubSearchModel Result
            </summary>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.SceneOperator.SetSceneSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.Scene})">
            <summary>
            Cascade set SceneSearchModel Results
            </summary>
            <param name="scenes"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.SceneOperator.SetSceneSearchModelCascade(DpControl.Domain.Entities.Scene)">
            <summary>
            Cascade set SceneSearchModel Result
            </summary>
            <param name="scene"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.SceneOperator.SetSceneSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.Scene})">
            <summary>
            Cascade set SceneSubSearchModel Results
            </summary>
            <param name="scenes"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.SceneOperator.SetSceneSubSearchModel(DpControl.Domain.Entities.Scene)">
            <summary>
            Cascade set SceneSubSearchModel Result
            </summary>
            <param name="scene"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.SceneSegmentOperator.SetSceneSegmentSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.SceneSegment})">
            <summary>
            Cascade set SceneSegmentSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.SceneSegmentOperator.SetSceneSegmentSearchModelCascade(DpControl.Domain.Entities.SceneSegment)">
            <summary>
            Cascade set SceneSegmentSearchModel Result
            </summary>
            <param name="sceneSegment"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.SceneSegmentOperator.SetSceneSegmentSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.SceneSegment})">
            <summary>
            Cascade set SceneSubSegmentSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.SceneSegmentOperator.SetSceneSegmentSubSearchModel(DpControl.Domain.Entities.SceneSegment)">
            <summary>
            Cascade set SceneSegmentSearchModel Result
            </summary>
            <param name="sceneSegment"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.UserOperator.SetUserSearchModelCascade(System.Collections.Generic.List{DpControl.Domain.Entities.ApplicationUser})">
            <summary>
            Cascade set UserSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.UserOperator.SetUserSearchModelCascade(DpControl.Domain.Entities.ApplicationUser)">
            <summary>
            Cascade set UserSearchModel Result
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.UserOperator.SetUserSubSearchModel(System.Collections.Generic.List{DpControl.Domain.Entities.ApplicationUser})">
            <summary>
            Cascade set UserSubSearchModel Results
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.UserOperator.SetUserSubSearchModel(DpControl.Domain.Entities.ApplicationUser)">
            <summary>
            Cascade set UserSubSearchModel Result
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="P:DpControl.Domain.Models.Query.orderby">
            <summary>
            排序
            格式：orderby=name,price desc/asc
                  orderby=name 
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.Query.skip">
            <summary>
            跳过前N条
            格式：skip=10
            @"^[1-9]([0-9]*)$|^[0-9]$" 只能是0或正整数
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.Query.top">
            <summary>
            返回前N条
            格式：top=20
            @"^[1-9]([0-9]*)$|^[0-9]$" 只能是0或正整数
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.Query.select">
            <summary>
            选中要返回的属性结果
            格式：select = name,price
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.Query.expand">
            <summary>
            Expand
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.Query.filter">
            <summary>
            Filter
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.Query.And(System.String,System.String)">
            <summary>
            Add extra And Confition
            </summary>
            <param name="propertyName"></param>
            <param name="propertyValue"></param>
        </member>
        <member name="M:DpControl.Domain.Models.Query.AddFilterCondition(System.Collections.Generic.List{DpControl.Domain.Models.Filter})">
            <summary>
            Add extra filter condition
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.Query.AddFilterCondition(DpControl.Domain.Models.Filter)">
            <summary>
            Add extra filter condition
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.OrderBy.OrderbyField">
            <summary>
            orderby field name
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.OrderBy.OrderbyBehavior">
            <summary>
            orderby behavior (desc/asc or empty)
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.Filter.FilterPropertyValue">
            <summary>
            key:PropertyName
            value:PropertyValue
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.Filter.CompareOperator">
            <summary>
            this operator will be: eq、lt 、gt
            </summary>
        </member>
        <member name="P:DpControl.Domain.Models.Filter.LogicalOperator">
            <summary>
            this operator will be : and 、or
            </summary>
        </member>
        <member name="M:DpControl.Domain.Models.ExpandOperator.ExpandRelatedEntities``1(System.Linq.IQueryable{``0})">
            <summary>
            Expand Related Entities
            </summary>
            <param name="result"></param>
            
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.ExpandOperator.NeedExpand(System.String)">
            <summary>
            Judge if need expand
            </summary>
            <param name="relatedEntityName"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.QueryOperate`1.ConstructMulitFilterLambadExpression(DpControl.Domain.Models.Filter[])">
            <summary>
            Construct mulit filter conditions
            </summary>
            <param name="filterParams"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Models.QueryOperate`1.ConstructFilterLambadExpression(DpControl.Domain.Models.Filter)">
            <summary>
            Construct single filter condition
            </summary>
            <param name="filterParams"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Repository.CustomerRepository.GetAll">
            <summary>
            Get All Customers
            If user has CustomerNo ,then filter by CustomerNo
            if user's CustomerNo is null ,then return all Customers
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Repository.RoleRepository.CreateRelationsAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Create Relations
            </summary>
            <param name="roleId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Repository.UserRepository.CreateRelationsAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Creation Relations 
            </summary>
            <param name="userId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Repository.UserRepository.RemoveRelationsAsync(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Remove Relations
            </summary>
            <param name="userId"></param>
            <param name="navigationProperty"></param>
            <param name="navigationPropertyIds"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Repository.UserRepository.SystemExistCustomerNo(System.String)">
            <summary>
            Is CustomerNo existed in system
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Repository.UserRepository.SystemExistProjectNo(System.String)">
            <summary>
            Is ProjectNo existed in system
            </summary>
            <param name="projectNo"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Domain.Repository.UserRepository.ProjectBelongToCustomer(System.String,System.String)">
            <summary>
            Is ProjectNo Belong to CustomerNo
            </summary>
            <param name="customerNo"></param>
            <param name="projectNo"></param>
            <returns></returns>
        </member>
        <member name="P:DpControl.Models.JQueryDataTableParams.sEcho">
            <summary>  
            Request sequence number sent by DataTable,  
            same value must be returned in response  
            </summary>      
        </member>
        <member name="P:DpControl.Models.JQueryDataTableParams.sSearch">
            <summary>  
            Text used for filtering  
            </summary>  
        </member>
        <member name="P:DpControl.Models.JQueryDataTableParams.iDisplayLength">
            <summary>  
            Number of records that should be shown in table  
            </summary>  
        </member>
        <member name="P:DpControl.Models.JQueryDataTableParams.iDisplayStart">
            <summary>  
            First record that should be shown(used for paging)  
            </summary>  
        </member>
        <member name="P:DpControl.Models.JQueryDataTableParams.iColumns">
            <summary>  
            Number of columns in table  
            </summary>  
        </member>
        <member name="P:DpControl.Models.JQueryDataTableParams.iSortingCols">
            <summary>  
            Number of columns that are used in sorting  
            </summary>  
        </member>
        <member name="P:DpControl.Models.JQueryDataTableParams.sColumns">
            <summary>  
            Comma separated list of column names  
            </summary>  
        </member>
        <member name="P:DpControl.Models.Menu.MenuIcon">
            <summary>
            fullname eg:logo.png
            </summary>
        </member>
        <member name="T:DpControl.Models.ListResponseModel`1">
            <summary>
            返回结果是list的消息构造
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:DpControl.Models.SingleResponseModel`1">
            <summary>
            返回结果是单条数据的消息构造
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:DpControl.Models.ErrorResponseModel">
            <summary>
            API错误消息构造
            </summary>
        </member>
        <member name="M:DpControl.Utility.Common.ConverValueToType(System.Type,System.Object)">
            <summary>
            Conver object value to Type
            if falied throw exception
            </summary>
            <param name="type"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.DataSeeder.SeedData(Microsoft.AspNet.Builder.IApplicationBuilder)">
            <summary>
            This is a workaround for missing seed data functionality in EF 7.0-rc1
            More info: https://github.com/aspnet/EntityFramework/issues/629
            </summary>
            <param name="app">
            An instance that provides the mechanisms to get instance of the database context.
            </param>
        </member>
        <member name="M:DpControl.Utility.ModelHandler.ConverEntityToModel``2(System.Collections.Generic.List{``1})">
            <summary>
            Conver Entity To Model
            </summary>
            <typeparam name="M"></typeparam>
            <typeparam name="E"></typeparam>
            <param name="entitys"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.ModelHandler.ConverEntityToModel``2(``1)">
            <summary>
            Conver Entity To Model
            </summary>
            <typeparam name="M"></typeparam>
            <typeparam name="E"></typeparam>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.ModelHandler.ConverModelToEntity``2(System.Collections.Generic.List{``0})">
            <summary>
            Conver Model To Entity
            </summary>
            <typeparam name="M"></typeparam>
            <typeparam name="E"></typeparam>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.ModelHandler.ConverModelToEntity``2(``0)">
            <summary>
            Conver Model To Entity
            </summary>
            <typeparam name="M"></typeparam>
            <typeparam name="E"></typeparam>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.ResponseHandler.ListResponse``1(``0)">
            <summary>
            返回数据是List的消息构造
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.ResponseHandler.SingleResponse``1(``0)">
            <summary>
            返回数据是单条数据的消息构造
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.ResponseHandler.ReturnError(System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            返回错误消息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.UserInfoManager.GetBasicLoginUserInfo">
            <summary>
            Get UserInfo from Http Head
            Basic Authorization / Digest Authorization
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.UserInfoManager.GetBasicLoginUserInfoAsync">
            <summary>
            Get UserInfo from Http Head
            Basic Authorization / Digest Authorization
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Authentication.AbstractAuthentication.DoAuthentication(Microsoft.AspNet.Http.HttpContext)">
            <summary>
            Do Authentication and return userName;
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Authentication.AbstractAuthentication.DoAuthenticationAndLogin(Microsoft.AspNet.Http.HttpContext)">
            <summary>
            Do Authentication and Login;
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Authentication.AbstractAuthentication.GetUserInfoFromHttpHeadAsync(Microsoft.AspNet.Http.HttpContext)">
            <summary>
            Get User Info
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:DpControl.Utility.Authentication.APIAuthenticationMiddleware">
            <summary>
            API Authentication 
            </summary>
        </member>
        <member name="T:DpControl.Utility.Authentication.BasicAuthentication">
            <summary>
            
            </summary>
        </member>
        <member name="M:DpControl.Utility.Authentication.BasicAuthentication.InitServices(Microsoft.AspNet.Http.HttpContext)">
            <summary>
            获取依赖注入实例
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="T:DpControl.Utility.Authentication.DigestAuthentication">
            <summary>
            Digest Authentication
            </summary>
        </member>
        <member name="M:DpControl.Utility.Authentication.DigestAuthentication.CheckUserInfo(System.String,Microsoft.AspNet.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="actionContext"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:DpControl.Utility.Authorization.APIAuthorizationRequirement" -->
        <member name="T:DpControl.Utility.Authorization.APIAuthorizeAttribute">
            <summary>
            Restful web api Authorization 
            </summary>
        </member>
        <member name="M:DpControl.Utility.Authorization.APIAuthorizeAttribute.InitServices(Microsoft.AspNet.Http.HttpContext)">
            <summary>
            获取依赖注入实例
            </summary>
            <param name="httpContext"></param>
        </member>
        <member name="M:DpControl.Utility.ExceptionHandler.GlobalExceptionBuilder.ExceptionBuilder(Microsoft.AspNet.Builder.IApplicationBuilder)">
            <summary>
            判断不同的异常并将不同类型的异常转换为HttpStatusCode
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:DpControl.Utility.ExceptionHandler.GlobalExceptionFilter">
            <summary>
            全局捕获异常
            把异常转换为HTTP消息
            </summary>
        </member>
        <member name="T:DpControl.Utility.Filters.EnableQueryAttribute">
            <summary>
            查询过滤器
            该类允许对Controller取得的结果集进行过滤，排序等查询操作
            </summary>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.OnActionExecuted(Microsoft.AspNet.Mvc.Filters.ActionExecutedContext)">
            <summary>
            在controller action执行之后调用 
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.OnActionExecuting(Microsoft.AspNet.Mvc.Filters.ActionExecutingContext)">
            <summary>
            在controller action执行之前调用 
            在方法执行前获取过滤，排序，搜索等查询条件
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.GetSkipParam(System.String)">
            <summary>
            获取skip参数
            </summary>
            <param name="skipString"></param>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.GetTopParam(System.String)">
            <summary>
            获取top参数
            </summary>
            <param name="topString"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.GetOrderbyParam(System.String)">
            <summary>
            获取orderby参数
            </summary>
            <param name="orderbyString"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.GetSelectParam(System.String)">
            <summary>
            获取select参数
            </summary>
            <param name="orderbyString"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.GetExpandParam(System.String)">
            <summary>
            获取expand参数
            </summary>
            <param name="expandString"></param>
            
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.GetFilterParam(System.String)">
            <summary>
            获取filter参数
            </summary>
            <param name="filterString"></param>
            
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.IsFilter_Select_OrderbyType(System.Reflection.PropertyInfo)">
            <summary>
            判断满足Filter,Select,OrderBy的数据类型
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.OnResultExecuting(Microsoft.AspNet.Mvc.Filters.ResultExecutingContext)">
            <summary>
            在controller action result执行之前调用 
            获取返回结果后，重新组织查询结果格式
            </summary>
            <param name="context"></param>
            
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.IsSingleResult(System.Object)">
            <summary>
            判断result是单个结果，而不是list
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.ReturnExpandAndSelectResult(System.Type,System.Object,System.String[],System.String[])">
            <summary>
            返回expand 和select之后的结果
            </summary>
            <param name="resultType"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.DynamicExpandAndSelectResult(System.Type,System.Collections.Generic.IEnumerable{System.Object},System.String[],System.String[])">
            <summary>
            根据expand 和select条件动态构造返回的结果
            </summary>
            <param name="resultType"></param>
            <param name="results"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.DynamicExpandAndSelectResult(System.Type,System.Object,System.String[],System.String[])">
            <summary>
            根据expand 和select条件动态构造返回的结果
            </summary>
            <param name="resultType"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.OrderByResult(System.Collections.IList)">
            <summary>
            对查询结果进行排序
            </summary>
            <param name="listData"></param>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.PageResult(System.Collections.IList)">
            <summary>
            对结果进行分页
            </summary>
            <returns></returns>
        </member>
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.CreateList(System.Type,System.Type,System.Object[])">
            <summary>
            根据类型，生成实例
            </summary>
            <param name="genericType"></param>
            <param name="innerType"></param>
            <param name="args">实例值</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:DpControl.Utility.Filters.EnableQueryAttribute.GetActionReturnType``1(``0)" -->
        <member name="M:DpControl.Utility.Filters.EnableQueryAttribute.GetClassType(System.Type)">
            <summary>
            获取Class类型
            </summary>
            <param name="converType"></param>
            <returns></returns>
        </member>
        <member name="T:DpControl.Utility.Filters.FormatReturnTypeAttribute">
            <summary>
            格式化List数据返回类型
            </summary>
        </member>
        <member name="M:DpControl.Utility.Filters.FormatReturnTypeAttribute.OnResultExecuting(Microsoft.AspNet.Mvc.Filters.ResultExecutingContext)">
            <summary>
            在controller action result执行之前调用 
            统一数据返回类型
            </summary>
            <param name="context"></param>
            
        </member>
        <member name="T:DpControl.Utility.Middlewares.RequiredScopesMiddleware">
            <summary>
            For IdentityServer3
            </summary>
        </member>
        <member name="T:DpControl.Utility.Middlewares.XHttpHeaderOverrideMiddleware">
            <summary>
            允许通过POST方法覆盖http方法
            </summary>
        </member>
    </members>
</doc>
